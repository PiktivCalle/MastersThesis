{
    "few_shot_examples": [
        {
            "prompt": "How many roads are there in the map?",
            "query": "MATCH (r:Road) RETURN count(r) as roads"
        },
        {
            "prompt": "How many roads contain multiple lanes?",
            "query": "MATCH (r:Road)-[:HAS_LANE]->(l:Lane) WITH r, COUNT(l) AS lane_count WHERE lane_count > 1 RETURN COUNT(r) AS roads_with_multiple_lanes"
        },
        {
            "prompt": "Return the names of the signs",
            "query": "MATCH (o:Object) RETURN DISTINCT o.name AS sign_name"
        },
        {
            "prompt": "Which roads can turn left?",
            "query": "MATCH (r:Road)-[:HAS_LANE]->(l1:Lane) WHERE (l1)-[:PRECEDES {direction:'left'}]->() RETURN DISTINCT r.id as roadId"
        },
        {
            "prompt": "How many driving lanes are there?",
            "query": "MATCH (r:Road)-[:HAS_LANE]->(l1:Lane {lane_type:'driving'}) RETURN COUNT(l1) as number_driving_lanes"
        },
        {
            "prompt": "How many roads have driving lanes in each direction?",
            "query": "MATCH (r:Road)-[:HAS_LANE]->(l1:Lane {lane_type:'driving', travelDirection:'forward'}) MATCH (r)-[:HAS_LANE]->(l2:Lane {lane_type:'driving', travelDirection:'backward'}) RETURN COUNT(r) as roads_both_driving_direction"
        },
        {
            "prompt": "Output one driveable lane",
            "query": "MATCH (r:Road)-[:HAS_LANE]->(l1:Lane {lane_type:'driving'}) return l1 as driveable_lane LIMIT 1"
        },
        {
            "prompt": "How many intersections are there?",
            "query": "MATCH (r:Road) WHERE r.junctionId <> '-1' RETURN COUNT(DISTINCT r.junctionId)"
        }
    ]
}